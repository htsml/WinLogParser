2025-05-04
업데이트 기록
1. Filter Form에 Load Log 기능을 추가했습니다. Load 버튼 클릭 시 '컬럼 불러오기'와 '로그 불러오기' 중 선택할 수 있으며, 컬럼을 먼저 불러오고 로그를 불러올 경우, 실시간 로그가 아닌 기존 로그 파일을 파싱하는 방식입니다.

2025-05-16
업데이트 기록
1. 페이지처럼 버튼 식 이동 추가
1). 기존 자동 스크롤 방식은 실시간 로그 확인에는 좋지만, 과거 로그 탐색이 불편함
2). 사용자가 특정 위치로 빠르게 이동하거나 원하는 페이지로 점프할 수 있는 기능이 필요했음
3). 버튼 및 텍스트박스를 활용한 페이지 탐색 기능을 추가함으로써 UX를 향상시키기 위함

2. 코드 변경 사항
1. pageSize, pageIndex 구조 도입
: 한 페이지에 표시할 줄 수를 pageSize로 고정 (예: 100)

2. pageIndex를 기반으로 현재 보고 있는 페이지 관리

3. TotalPages 계산 로직 추가
페이지 탐색 버튼 및 입력 기능 추가
< 이전 페이지 버튼 → LoadPage(pageIndex - 1)
> 다음 페이지 버튼 → LoadPage(pageIndex + 2)
텍스트박스에서 페이지 번호 입력 후 Enter → 해당 페이지로 이동

4. LoadPage() 함수 구현
페이지 인덱스 유효성 검사 및 RowCount/스크롤 갱신
UI 표시 정보(labelPageInfo, textBoxPage) 업데이트 포함

5. AppendLog() 실시간 로그 처리 개선
로그 추가 시 현재 페이지가 마지막 페이지일 경우 자동으로 최신 페이지로 이동
oldTotalPages / newTotalPages 기반 비교를 통해 불필요한 강제 이동 방지
실시간 로그와 사용자 조작 간 충돌 없는 동작 구조 설계

6. UpdatePage()에 InvokeRequired 처리 추가
타이머 혹은 비동기 로그 추가 시 발생할 수 있는 크로스 스레드 예외 방지

7. BeginInvoke()를 사용해 UI 스레드에서 안전하게 페이지 정보 업데이트

8. 장기 확장성 고려한 설계
allLogs가 수십만 줄 이상으로 증가하더라도 UI 렌더링은 pageSize 범위로 제한
추후 로그 필터링, 검색, 오류 강조 등 추가 기능 개발을 위한 구조 기반 마련

